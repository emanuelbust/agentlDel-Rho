[Thu Oct 20 11:36:07 2016]: Program started...
('Recombinaton: ', 1, ' | Directory: ', 'test/', ' | Population Size: ', 100, ' | Number of lDels: ', 500, ' | Generations: ', 10000, ' | Initial lDel Frequency: ', 0.8, ' | Replication: ', 1)
[Thu Oct 20 11:36:15 2016]: Population initialized...
[Thu Oct 20 11:36:16 2016]: 1% complete
[Thu Oct 20 11:36:17 2016]: 2% complete
[Thu Oct 20 11:36:18 2016]: 3% complete
[Thu Oct 20 11:36:19 2016]: 4% complete
[Thu Oct 20 11:36:21 2016]: 5% complete
[Thu Oct 20 11:36:22 2016]: 6% complete
[Thu Oct 20 11:36:24 2016]: 7% complete
[Thu Oct 20 11:36:25 2016]: 8% complete
[Thu Oct 20 11:36:26 2016]: 9% complete
[Thu Oct 20 11:36:27 2016]: 10% complete
[Thu Oct 20 11:36:28 2016]: 11% complete
[Thu Oct 20 11:36:30 2016]: 12% complete
[Thu Oct 20 11:36:31 2016]: 13% complete
[Thu Oct 20 11:36:32 2016]: 14% complete
[Thu Oct 20 11:36:33 2016]: 15% complete
[Thu Oct 20 11:36:34 2016]: 16% complete
[Thu Oct 20 11:36:36 2016]: 17% complete
[Thu Oct 20 11:36:37 2016]: 18% complete
[Thu Oct 20 11:36:38 2016]: 19% complete
[Thu Oct 20 11:36:39 2016]: 20% complete
[Thu Oct 20 11:36:40 2016]: 21% complete
[Thu Oct 20 11:36:42 2016]: 22% complete
[Thu Oct 20 11:36:43 2016]: 23% complete
[Thu Oct 20 11:36:44 2016]: 24% complete
[Thu Oct 20 11:36:45 2016]: 25% complete
[Thu Oct 20 11:36:46 2016]: 26% complete
[Thu Oct 20 11:36:47 2016]: 27% complete
[Thu Oct 20 11:36:48 2016]: 28% complete
[Thu Oct 20 11:36:49 2016]: 28% complete
[Thu Oct 20 11:36:50 2016]: 30% complete
[Thu Oct 20 11:36:52 2016]: 31% complete
[Thu Oct 20 11:36:53 2016]: 32% complete
[Thu Oct 20 11:36:54 2016]: 33% complete
[Thu Oct 20 11:36:55 2016]: 34% complete
[Thu Oct 20 11:36:56 2016]: 35% complete
[Thu Oct 20 11:36:58 2016]: 36% complete
[Thu Oct 20 11:36:59 2016]: 37% complete
[Thu Oct 20 11:37:00 2016]: 38% complete
[Thu Oct 20 11:37:01 2016]: 39% complete
[Thu Oct 20 11:37:02 2016]: 40% complete
[Thu Oct 20 11:37:03 2016]: 41% complete
[Thu Oct 20 11:37:04 2016]: 42% complete
[Thu Oct 20 11:37:05 2016]: 43% complete
[Thu Oct 20 11:37:06 2016]: 44% complete
[Thu Oct 20 11:37:07 2016]: 45% complete
[Thu Oct 20 11:37:08 2016]: 46% complete
[Thu Oct 20 11:37:09 2016]: 47% complete
[Thu Oct 20 11:37:10 2016]: 48% complete
[Thu Oct 20 11:37:11 2016]: 49% complete
[Thu Oct 20 11:37:12 2016]: 50% complete
[Thu Oct 20 11:37:13 2016]: 51% complete
[Thu Oct 20 11:37:14 2016]: 52% complete
[Thu Oct 20 11:37:15 2016]: 53% complete
[Thu Oct 20 11:37:16 2016]: 54% complete
[Thu Oct 20 11:37:16 2016]: 55% complete
[Thu Oct 20 11:37:17 2016]: 56% complete
[Thu Oct 20 11:37:18 2016]: 56% complete
[Thu Oct 20 11:37:19 2016]: 57% complete
[Thu Oct 20 11:37:20 2016]: 59% complete
[Thu Oct 20 11:37:21 2016]: 60% complete
[Thu Oct 20 11:37:22 2016]: 61% complete
[Thu Oct 20 11:37:23 2016]: 62% complete
[Thu Oct 20 11:37:24 2016]: 63% complete
[Thu Oct 20 11:37:25 2016]: 64% complete
[Thu Oct 20 11:37:26 2016]: 65% complete
[Thu Oct 20 11:37:27 2016]: 66% complete
[Thu Oct 20 11:37:28 2016]: 67% complete
[Thu Oct 20 11:37:29 2016]: 68% complete
[Thu Oct 20 11:37:30 2016]: 69% complete
[Thu Oct 20 11:37:31 2016]: 70% complete
[Thu Oct 20 11:37:32 2016]: 71% complete
[Thu Oct 20 11:37:33 2016]: 72% complete
[Thu Oct 20 11:37:34 2016]: 73% complete
[Thu Oct 20 11:37:35 2016]: 74% complete
[Thu Oct 20 11:37:36 2016]: 75% complete
[Thu Oct 20 11:37:37 2016]: 76% complete
[Thu Oct 20 11:37:38 2016]: 77% complete
[Thu Oct 20 11:37:39 2016]: 78% complete
[Thu Oct 20 11:37:40 2016]: 79% complete
[Thu Oct 20 11:37:41 2016]: 80% complete
[Thu Oct 20 11:37:42 2016]: 81% complete
[Thu Oct 20 11:37:43 2016]: 82% complete
[Thu Oct 20 11:37:44 2016]: 83% complete
[Thu Oct 20 11:37:45 2016]: 84% complete
[Thu Oct 20 11:37:46 2016]: 85% complete
[Thu Oct 20 11:37:47 2016]: 86% complete
[Thu Oct 20 11:37:48 2016]: 87% complete
[Thu Oct 20 11:37:49 2016]: 88% complete
[Thu Oct 20 11:37:50 2016]: 89% complete
[Thu Oct 20 11:37:51 2016]: 90% complete
[Thu Oct 20 11:37:51 2016]: 91% complete
[Thu Oct 20 11:37:53 2016]: 92% complete
[Thu Oct 20 11:37:54 2016]: 93% complete
[Thu Oct 20 11:37:55 2016]: 94% complete
[Thu Oct 20 11:37:56 2016]: 95% complete
[Thu Oct 20 11:37:56 2016]: 96% complete
[Thu Oct 20 11:37:57 2016]: 97% complete
[Thu Oct 20 11:37:58 2016]: 98% complete
[Thu Oct 20 11:37:59 2016]: 99% complete
[Thu Oct 20 11:38:00 2016]: 100% complete
[Thu Oct 20 11:38:00 2016]: Done
Population file: 1476988575.2_rec=1_n=100_lTot=500_initLdelFreq=0.8_cooption=1_replicateNumber=1.pop
         107367161 function calls (106793637 primitive calls) in 114.804 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  3000000   27.500    0.000   36.286    0.000 cycle.py:29(recombine)
  1282000   15.644    0.000   37.059    0.000 setup.py:125(getFitness)
  1000000    8.975    0.000   10.886    0.000 cycle.py:146(pickDeadIndiv)
  1302000    8.001    0.000    9.058    0.000 setup.py:79(getEnvScore)
  1342500    6.847    0.000    6.847    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        2    6.779    3.390  114.806   57.403 main.py:1(<module>)
   502862    5.357    0.000    5.357    0.000 {repr}
 62275898    5.298    0.000    5.298    0.000 {method 'random' of '_random.Random' objects}
  1000000    4.797    0.000   41.334    0.000 cycle.py:190(replaceDeadWithOffspring)
  8302704    4.344    0.000    4.344    0.000 {range}
  1000000    3.148    0.000    4.473    0.000 cycle.py:104(cooption)
  1342500    2.753    0.000   11.122    0.000 fromnumeric.py:1743(sum)
  9001562    2.375    0.000    2.375    0.000 {method 'append' of 'list' objects}
  3000000    1.594    0.000    1.594    0.000 {method 'sort' of 'list' objects}
   936015    1.173    0.000    1.173    0.000 {method 'write' of 'file' objects}
492900/100    1.139    0.000    9.906    0.099 pickle.py:269(save)
  1282000    0.950    0.000    0.950    0.000 {max}
  1000000    0.869    0.000    1.150    0.000 cycle.py:257(mutateIndividual)
       99    0.853    0.009    0.853    0.009 {posix.system}
  1384183    0.850    0.000    0.850    0.000 {isinstance}
  1342500    0.680    0.000    7.527    0.000 _methods.py:31(_sum)
  1282318    0.525    0.000    0.525    0.000 {math.log}
   221600    0.467    0.000    0.901    0.000 pickle.py:227(memoize)
130400/70000    0.433    0.000    8.342    0.000 pickle.py:538(save_tuple)
        4    0.414    0.103    1.381    0.345 __init__.py:1(<module>)
  1282001    0.283    0.000    0.283    0.000 {math.exp}
      100    0.249    0.002    7.805    0.078 setup.py:35(findRhoMaximizingFitness)
      100    0.248    0.002    0.768    0.008 output.py:28(recordStatistics)
    40200    0.246    0.000    0.246    0.000 {method '__reduce_ex__' of 'object' objects}
   886563    0.160    0.000    0.160    0.000 {method 'get' of 'dict' objects}
40200/40000    0.148    0.000    9.098    0.000 pickle.py:345(save_reduce)
   221600    0.123    0.000    0.166    0.000 pickle.py:250(put)
  1106700    0.118    0.000    0.118    0.000 {id}
        1    0.103    0.103    0.103    0.103 hashlib.py:56(<module>)
    40500    0.090    0.000    5.945    0.000 pickle.py:486(save_string)
   139500    0.085    0.000    0.109    0.000 pickle.py:260(get)
    91200    0.081    0.000    0.173    0.000 pickle.py:443(save_int)
        1    0.070    0.070    0.071    0.071 __init__.py:88(<module>)
   492900    0.070    0.000    0.070    0.000 pickle.py:333(persistent_id)
        2    0.063    0.031    0.102    0.051 __init__.py:45(<module>)
394028/394005    0.054    0.000    0.054    0.000 {len}
        1    0.051    0.051    0.055    0.055 __init__.py:15(<module>)
10100/100    0.050    0.000    9.902    0.099 pickle.py:614(_batch_appends)
        1    0.050    0.050    1.043    1.043 __init__.py:106(<module>)
      500    0.047    0.000    0.047    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.036    0.036    0.080    0.080 index_tricks.py:1(<module>)
        1    0.034    0.034    0.034    0.034 npyio.py:1(<module>)
        2    0.032    0.016    0.032    0.016 function_base.py:1(<module>)
        1    0.029    0.029    0.058    0.058 polynomial.py:4(<module>)
      100    0.027    0.000    9.935    0.099 pickle.py:1375(dump)
        1    0.027    0.027    0.154    0.154 __init__.py:7(<module>)
      102    0.025    0.000    0.025    0.000 {open}
10100/100    0.023    0.000    9.905    0.099 pickle.py:597(save_list)
      203    0.022    0.000    0.022    0.000 {method 'flush' of 'file' objects}
        1    0.022    0.022    0.026    0.026 __init__.py:41(<module>)
        1    0.019    0.019    0.042    0.042 numeric.py:1(<module>)
        1    0.019    0.019    0.031    0.031 terminate.py:1(<module>)
40289/40261    0.019    0.000    0.020    0.000 {issubclass}
        1    0.019    0.019    7.835    7.835 setup.py:177(initializePopulation)
        1    0.019    0.019    0.019    0.019 io.py:34(<module>)
    30000    0.018    0.000    0.042    0.000 pickle.py:436(save_bool)
        1    0.018    0.018    0.023    0.023 numerictypes.py:82(<module>)
        1    0.017    0.017    0.018    0.018 result.py:1(<module>)
        1    0.017    0.017    0.017    0.017 heapq.py:31(<module>)
    42319    0.017    0.000    0.017    0.000 {getattr}
    40227    0.016    0.000    0.016    0.000 {hasattr}
        1    0.013    0.013    0.041    0.041 utils.py:4(<module>)
        1    0.013    0.013    0.053    0.053 decorators.py:15(<module>)
        1    0.013    0.013    0.013    0.013 linalg.py:10(<module>)
        1    0.012    0.012    0.013    0.013 __init__.py:3(<module>)
        1    0.012    0.012    0.012    0.012 __init__.py:10(<module>)
        1    0.012    0.012    0.012    0.012 csv.py:4(<module>)
    10000    0.011    0.000    0.049    0.000 pickle.py:479(save_float)
        1    0.009    0.009    0.524    0.524 type_check.py:3(<module>)
        1    0.007    0.007    0.112    0.112 random.py:40(<module>)
        1    0.006    0.006    0.025    0.025 tempfile.py:18(<module>)
        1    0.005    0.005    0.006    0.006 case.py:1(<module>)
      338    0.004    0.000    0.004    0.000 {numpy.core.multiarray.array}
        1    0.004    0.004    0.021    0.021 collections.py:11(<module>)
        1    0.003    0.003    0.070    0.070 _internal.py:6(<module>)
    10100    0.003    0.000    0.003    0.000 {iter}
      775    0.003    0.000    0.003    0.000 random.py:175(randrange)
        1    0.003    0.003    0.003    0.003 fftpack.py:32(<module>)
      674    0.002    0.000    0.002    0.000 {__import__}
      632    0.002    0.000    0.003    0.000 random.py:562(gauss)
        1    0.002    0.002    0.003    0.003 polynomial.py:55(<module>)
        5    0.002    0.000    0.057    0.011 output.py:104(outputlDelCount)
      400    0.002    0.000    0.006    0.000 pickle.py:736(save_global)
        1    0.002    0.002    0.003    0.003 pickle.py:25(<module>)
        1    0.002    0.002    0.002    0.002 shutil.py:5(<module>)
        1    0.002    0.002    0.002    0.002 arrayprint.py:5(<module>)
      775    0.001    0.000    0.004    0.000 random.py:238(randint)
        2    0.001    0.001    0.002    0.001 collections.py:305(namedtuple)
      500    0.001    0.000    0.048    0.000 arrayprint.py:340(array2string)
      103    0.001    0.000    0.001    0.000 {time.asctime}
    20/14    0.001    0.000    0.002    0.000 sre_parse.py:395(_parse)
      273    0.001    0.000    0.003    0.000 function_base.py:3944(add_newdoc)
      100    0.001    0.000    0.001    0.000 pickle.py:173(__init__)
        1    0.001    0.001    0.004    0.004 core.py:21(<module>)
        1    0.001    0.001    0.001    0.001 loader.py:1(<module>)
       21    0.001    0.000    0.001    0.000 {numpy.core.multiarray.empty}
        1    0.001    0.001    0.799    0.799 add_newdocs.py:10(<module>)
        1    0.001    0.001    0.001    0.001 {function seed at 0x10196ea28}
       17    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x1016a0c48}
        1    0.001    0.001    0.001    0.001 fromnumeric.py:3(<module>)
       16    0.001    0.000    0.002    0.000 abc.py:86(__new__)
      500    0.000    0.000    0.049    0.000 numeric.py:1835(array_str)
      333    0.000    0.000    0.001    0.000 sre_parse.py:193(__next)
    42/14    0.000    0.000    0.001    0.000 sre_compile.py:64(_compile)
        1    0.000    0.000    0.001    0.001 runner.py:1(<module>)
       26    0.000    0.000    0.001    0.000 numerictypes.py:229(bitname)
        1    0.000    0.000    0.001    0.001 numerictypes.py:301(_add_aliases)
        1    0.000    0.000    0.001    0.001 defmatrix.py:1(<module>)
      134    0.000    0.000    0.005    0.000 re.py:230(_compile)
    20/15    0.000    0.000    0.001    0.000 abc.py:148(__subclasscheck__)
        1    0.000    0.000    0.001    0.001 threading.py:1(<module>)
      600    0.000    0.000    0.001    0.000 pickle.py:432(save_none)
      271    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {posix.urandom}
       38    0.000    0.000    0.000    0.000 _inspect.py:67(getargs)
    64/36    0.000    0.000    0.000    0.000 sre_parse.py:151(getwidth)
      100    0.000    0.000    9.906    0.099 pickle.py:220(dump)
        1    0.000    0.000    0.000    0.000 _iotools.py:3(<module>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:51(<module>)
       38    0.000    0.000    0.000    0.000 _inspect.py:142(formatargspec)
      162    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
       18    0.000    0.000    0.000    0.000 sre_compile.py:256(_optimize_charset)
       64    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        1    0.000    0.000    0.000    0.000 _endian.py:1(<module>)
        1    0.000    0.000    0.000    0.000 defmatrix.py:208(matrix)
       32    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 numeric.py:365(extend_all)
      512    0.000    0.000    0.000    0.000 {chr}
        1    0.000    0.000    0.000    0.000 polyutils.py:45(<module>)
        1    0.000    0.000    0.000    0.000 _datasource.py:35(<module>)
      316    0.000    0.000    0.000    0.000 {math.cos}
        1    0.000    0.000    0.000    0.000 records.py:36(<module>)
       30    0.000    0.000    0.000    0.000 numerictypes.py:443(_add_array_type)
       72    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
      285    0.000    0.000    0.001    0.000 sre_parse.py:212(get)
        3    0.000    0.000    0.000    0.000 __init__.py:75(CFUNCTYPE)
        1    0.000    0.000    0.000    0.000 suite.py:1(<module>)
      151    0.000    0.000    0.000    0.000 sre_parse.py:141(__getitem__)
        1    0.000    0.000    0.000    0.000 _globals.py:17(<module>)
        1    0.000    0.000    0.000    0.000 extras.py:10(<module>)
       14    0.000    0.000    0.003    0.000 sre_parse.py:706(parse)
       21    0.000    0.000    0.000    0.000 numerictypes.py:216(_evalname)
        2    0.000    0.000    0.000    0.000 {method 'close' of 'file' objects}
        2    0.000    0.000    0.000    0.000 {_ctypes.POINTER}
       19    0.000    0.000    0.000    0.000 nosetester.py:170(__init__)
      271    0.000    0.000    0.000    0.000 {numpy.core.multiarray.add_docstring}
        1    0.000    0.000    0.000    0.000 arrayterator.py:9(<module>)
       14    0.000    0.000    0.005    0.000 sre_compile.py:567(compile)
        1    0.000    0.000    0.000    0.000 scimath.py:17(<module>)
       14    0.000    0.000    0.000    0.000 sre_compile.py:433(_compile_info)
        1    0.000    0.000    0.000    0.000 numerictypes.py:451(_set_array_types)
        1    0.000    0.000    0.000    0.000 numerictypes.py:285(_add_types)
       43    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        1    0.000    0.000    0.000    0.000 contextlib.py:1(<module>)
        1    0.000    0.000    0.000    0.000 defchararray.py:17(<module>)
        1    0.000    0.000    0.000    0.000 _import_tools.py:1(<module>)
       98    0.000    0.000    0.000    0.000 _inspect.py:133(strseq)
        1    0.000    0.000    0.001    0.001 utils.py:1(<module>)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:8(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:338(_add_integer_aliases)
        1    0.000    0.000    0.000    0.000 signals.py:1(<module>)
        1    0.000    0.000    0.000    0.000 core.py:2683(MaskedArray)
       12    0.000    0.000    0.000    0.000 ctypeslib.py:330(prep_simple)
       19    0.000    0.000    0.000    0.000 nosetester.py:511(_numpy_tester)
      317    0.000    0.000    0.000    0.000 {math.sqrt}
       27    0.000    0.000    0.000    0.000 core.py:903(__init__)
       19    0.000    0.000    0.000    0.000 posixpath.py:120(dirname)
       26    0.000    0.000    0.001    0.000 core.py:6358(getdoc)
       43    0.000    0.000    0.000    0.000 _inspect.py:98(getargspec)
      117    0.000    0.000    0.000    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
      316    0.000    0.000    0.000    0.000 {math.sin}
       43    0.000    0.000    0.001    0.000 core.py:113(get_object_signature)
        1    0.000    0.000    0.000    0.000 legendre.py:83(<module>)
        1    0.000    0.000    0.000    0.000 laguerre.py:59(<module>)
        1    0.000    0.000    0.001    0.001 numbers.py:6(<module>)
        1    0.000    0.000    0.000    0.000 twodim_base.py:3(<module>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:781(_construct_lookups)
        3    0.000    0.000    0.000    0.000 __init__.py:490(PYFUNCTYPE)
        1    0.000    0.000    0.000    0.000 hermite.py:59(<module>)
       18    0.000    0.000    0.001    0.000 sre_compile.py:228(_compile_charset)
        1    0.000    0.000    0.001    0.001 difflib.py:27(<module>)
      123    0.000    0.000    0.000    0.000 sre_parse.py:206(match)
        1    0.000    0.000    0.000    0.000 memmap.py:1(<module>)
        1    0.000    0.000    0.000    0.000 __init__.py:262(_reset_cache)
      117    0.000    0.000    0.001    0.000 re.py:138(match)
        1    0.000    0.000    0.000    0.000 getlimits.py:3(<module>)
        1    0.000    0.000    0.000    0.000 financial.py:10(<module>)
       14    0.000    0.000    0.000    0.000 __init__.py:144(_check_size)
      140    0.000    0.000    0.000    0.000 sre_parse.py:149(append)
        5    0.000    0.000    0.000    0.000 getlimits.py:245(__init__)
    20/14    0.000    0.000    0.002    0.000 sre_parse.py:317(_parse_sub)
      118    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
       72    0.000    0.000    0.000    0.000 numerictypes.py:127(english_lower)
       24    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
       16    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       15    0.000    0.000    0.001    0.000 abc.py:105(register)
        3    0.000    0.000    0.000    0.000 utils.py:73(__call__)
        1    0.000    0.000    0.000    0.000 info.py:184(<module>)
        1    0.000    0.000    0.000    0.000 format.py:149(<module>)
        1    0.000    0.000    0.001    0.001 util.py:1(<module>)
        1    0.000    0.000    0.000    0.000 nosetester.py:6(<module>)
        5    0.000    0.000    0.000    0.000 sre_compile.py:411(_mk_bitmap)
        2    0.000    0.000    0.000    0.000 shape_base.py:1(<module>)
       35    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
       20    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
       40    0.000    0.000    0.000    0.000 numerictypes.py:154(english_upper)
        1    0.000    0.000    0.000    0.000 machar.py:7(<module>)
       89    0.000    0.000    0.000    0.000 sre_parse.py:137(__len__)
       28    0.000    0.000    0.000    0.000 sre_compile.py:546(isstring)
       22    0.000    0.000    0.000    0.000 sre_compile.py:428(_simple)
        5    0.000    0.000    0.001    0.000 warnings.py:67(filterwarnings)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:7(<module>)
      154    0.000    0.000    0.000    0.000 {_sre.getlower}
       49    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        1    0.000    0.000    0.000    0.000 hermite_e.py:59(<module>)
        1    0.000    0.000    0.000    0.000 chebyshev.py:87(<module>)
       17    0.000    0.000    0.005    0.000 re.py:192(compile)
        1    0.000    0.000    0.000    0.000 output.py:1(<module>)
       14    0.000    0.000    0.002    0.000 sre_compile.py:552(_code)
        1    0.000    0.000    0.000    0.000 {posix.uname}
       18    0.000    0.000    0.000    0.000 core.py:981(__init__)
        1    0.000    0.000    0.000    0.000 ufunclike.py:5(<module>)
        1    0.000    0.000    0.000    0.000 _polybase.py:19(ABCPolyBase)
        1    0.000    0.000    0.000    0.000 defchararray.py:1669(chararray)
       26    0.000    0.000    0.001    0.000 core.py:6353(__init__)
       20    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 __init__.py:346(__init__)
       66    0.000    0.000    0.000    0.000 sre_compile.py:101(fixup)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 arraypad.py:5(<module>)
        1    0.000    0.000    0.000    0.000 StringIO.py:30(<module>)
        1    0.000    0.000    0.000    0.000 numbers.py:34(Complex)
        1    0.000    0.000    0.000    0.000 pprint.py:35(<module>)
       42    0.000    0.000    0.000    0.000 sre_parse.py:92(__init__)
        8    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
      125    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 _version.py:7(<module>)
       14    0.000    0.000    0.000    0.000 {_sre.compile}
        4    0.000    0.000    0.000    0.000 sre_parse.py:227(isname)
        1    0.000    0.000    0.000    0.000 numerictypes.py:379(_set_up_aliases)
        1    0.000    0.000    0.000    0.000 _inspect.py:7(<module>)
      347    0.000    0.000    0.000    0.000 {globals}
        1    0.000    0.000    0.001    0.001 __init__.py:71(search_function)
        1    0.000    0.000    0.000    0.000 numerictypes.py:428(_construct_char_code_lookup)
        1    0.000    0.000    0.000    0.000 case.py:131(TestCase)
        1    0.000    0.000    0.001    0.001 numerictypes.py:957(_register_types)
       60    0.000    0.000    0.000    0.000 _inspect.py:146(<lambda>)
        1    0.000    0.000    0.000    0.000 _polybase.py:8(<module>)
        1    0.000    0.000    0.000    0.000 {posix.chdir}
       14    0.000    0.000    0.000    0.000 numerictypes.py:181(english_capitalize)
        3    0.000    0.000    0.000    0.000 utils.py:117(deprecate)
        1    0.000    0.000    0.001    0.001 py3k.py:71(sixu)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        2    0.000    0.000    0.000    0.000 {posix.putenv}
        1    0.000    0.000    0.000    0.000 {dir}
      117    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       46    0.000    0.000    0.000    0.000 collections.py:349(<genexpr>)
       60    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
       84    0.000    0.000    0.000    0.000 {min}
        1    0.000    0.000    0.000    0.000 _methods.py:5(<module>)
        1    0.000    0.000    0.000    0.000 __config__.py:3(<module>)
        1    0.000    0.000    0.000    0.000 _iotools.py:473(StringConverter)
        5    0.000    0.000    0.000    0.000 sre_parse.py:74(opengroup)
       14    0.000    0.000    0.000    0.000 sre_parse.py:189(__init__)
       43    0.000    0.000    0.000    0.000 _inspect.py:15(ismethod)
      155    0.000    0.000    0.000    0.000 {ord}
        1    0.000    0.000    0.000    0.000 collections.py:38(OrderedDict)
       20    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 info.py:34(<module>)
        1    0.000    0.000    0.000    0.000 arraysetops.py:26(<module>)
        1    0.000    0.000    0.000    0.000 py3k.py:4(<module>)
        9    0.000    0.000    0.000    0.000 extras.py:236(getdoc)
       18    0.000    0.000    0.000    0.000 {_struct.calcsize}
        1    0.000    0.000    0.000    0.000 nanfunctions.py:19(<module>)
        6    0.000    0.000    0.000    0.000 core.py:1139(__init__)
        5    0.000    0.000    0.000    0.000 {map}
       17    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 helper.py:4(<module>)
       11    0.000    0.000    0.000    0.000 sre_parse.py:268(_escape)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
       14    0.000    0.000    0.000    0.000 sre_parse.py:67(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:76(_determine_error_states)
        8    0.000    0.000    0.000    0.000 core.py:7782(getdoc)
       21    0.000    0.000    0.000    0.000 {sys._getframe}
        5    0.000    0.000    0.000    0.000 contextlib.py:54(contextmanager)
        1    0.000    0.000    0.000    0.000 threading.py:631(Thread)
       43    0.000    0.000    0.000    0.000 _inspect.py:28(isfunction)
        1    0.000    0.000    0.000    0.000 info.py:83(<module>)
        1    0.000    0.000    0.000    0.000 info.py:154(<module>)
        1    0.000    0.000    0.000    0.000 setup.py:1(<module>)
       19    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       23    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 threading.py:260(__init__)
        1    0.000    0.000    0.000    0.000 keyword.py:11(<module>)
        1    0.000    0.000    0.000    0.000 pickle.py:833(Unpickler)
        1    0.000    0.000    0.000    0.000 cycle.py:1(<module>)
       24    0.000    0.000    0.000    0.000 {setattr}
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
       38    0.000    0.000    0.000    0.000 _inspect.py:43(iscode)
        8    0.000    0.000    0.000    0.000 functools.py:39(wraps)
       20    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
       15    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 core.py:7777(__init__)
        2    0.000    0.000    0.000    0.000 {posix.unsetenv}
        3    0.000    0.000    0.000    0.000 {numpy.core.umath.seterrobj}
        1    0.000    0.000    0.000    0.000 numbers.py:295(Integral)
        1    0.000    0.000    0.000    0.000 _internal.py:200(_getintp_ctype)
        1    0.000    0.000    0.000    0.000 <string>:1(Mismatch)
        8    0.000    0.000    0.000    0.000 {all}
       20    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 polynomial.py:940(poly1d)
        1    0.000    0.000    0.000    0.000 fnmatch.py:11(<module>)
        2    0.000    0.000    0.000    0.000 numeric.py:2576(seterr)
        1    0.000    0.000    0.000    0.000 info.py:86(<module>)
        9    0.000    0.000    0.000    0.000 core.py:2521(_arraymethod)
        1    0.000    0.000    0.000    0.000 legendre.py:1795(Legendre)
        2    0.000    0.000    0.000    0.000 {_csv.register_dialect}
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        3    0.000    0.000    0.000    0.000 result.py:14(failfast)
       22    0.000    0.000    0.000    0.000 sre_parse.py:145(__setitem__)
        1    0.000    0.000    0.000    0.000 result.py:26(TestResult)
       50    0.000    0.000    0.000    0.000 {_ctypes.sizeof}
        1    0.000    0.000    0.000    0.000 threading.py:647(__init__)
        1    0.000    0.000    0.000    0.000 tempfile.py:519(SpooledTemporaryFile)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.set_string_function}
        1    0.000    0.000    0.000    0.000 polyutils.py:58(RankWarning)
        1    0.000    0.000    0.000    0.000 npyio.py:95(NpzFile)
        1    0.000    0.000    0.000    0.000 StringIO.py:42(StringIO)
        1    0.000    0.000    0.000    0.000 loader.py:38(TestLoader)
        1    0.000    0.000    0.000    0.000 <string>:1(Match)
        1    0.000    0.000    0.000    0.000 __init__.py:49(normalize_encoding)
        1    0.000    0.000    0.000    0.000 _iotools.py:250(NameValidator)
        8    0.000    0.000    0.000    0.000 collections.py:373(<genexpr>)
        1    0.000    0.000    0.000    0.000 pickle.py:171(Pickler)
        1    0.000    0.000    0.000    0.000 polynomial.py:1517(Polynomial)
        1    0.000    0.000    0.000    0.000 tempfile.py:108(_RandomNameSequence)
        1    0.000    0.000    0.000    0.000 arrayterator.py:20(Arrayterator)
        1    0.000    0.000    0.000    0.000 numeric.py:2963(__init__)
        2    0.000    0.000    0.000    0.000 os.py:472(__setitem__)
        3    0.000    0.000    0.000    0.000 utils.py:68(__init__)
        2    0.000    0.000    0.000    0.000 getlimits.py:270(max)
        4    0.000    0.000    0.000    0.000 core.py:94(doc_note)
        1    0.000    0.000    0.000    0.000 numbers.py:169(Real)
        1    0.000    0.000    0.000    0.000 csv.py:57(excel)
        4    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        3    0.000    0.000    0.000    0.000 index_tricks.py:242(__init__)
        9    0.000    0.000    0.000    0.000 extras.py:232(__init__)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:36(getregentry)
        1    0.000    0.000    0.000    0.000 threading.py:1081(__init__)
        1    0.000    0.000    0.000    0.000 laguerre.py:1765(Laguerre)
        1    0.000    0.000    0.000    0.000 hermite.py:1815(Hermite)
        1    0.000    0.000    0.000    0.000 _internal.py:226(_ctypes)
        1    0.000    0.000    0.000    0.000 core.py:5902(mvoid)
        1    0.000    0.000    0.000    0.000 csv.py:73(DictReader)
       24    0.000    0.000    0.000    0.000 sre_parse.py:221(isident)
        1    0.000    0.000    0.000    0.000 _datasource.py:50(_FileOpeners)
       20    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
       20    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        2    0.000    0.000    0.000    0.000 numeric.py:2676(geterr)
        1    0.000    0.000    0.000    0.000 records.py:215(record)
        5    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        1    0.000    0.000    0.000    0.000 runner.py:28(TextTestResult)
        5    0.000    0.000    0.000    0.000 sre_parse.py:85(closegroup)
        2    0.000    0.000    0.000    0.000 os.py:496(__delitem__)
       38    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        1    0.000    0.000    0.000    0.000 core.py:835(_DomainSafeDivide)
        1    0.000    0.000    0.000    0.000 case.py:1018(FunctionTestCase)
        1    0.000    0.000    0.000    0.000 collections.py:407(Counter)
        1    0.000    0.000    0.000    0.000 warnings.py:340(__init__)
        1    0.000    0.000    0.000    0.000 hermite_e.py:1812(HermiteE)
        1    0.000    0.000    0.000    0.000 _datasource.py:154(DataSource)
        1    0.000    0.000    0.000    0.000 codecs.py:92(__new__)
        1    0.000    0.000    0.000    0.000 warnings.py:361(__enter__)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.set_typeDict}
        1    0.000    0.000    0.000    0.000 warnings.py:96(simplefilter)
        8    0.000    0.000    0.000    0.000 collections.py:375(<genexpr>)
        1    0.000    0.000    0.000    0.000 function_base.py:2047(vectorize)
        1    0.000    0.000    0.000    0.000 {_ctypes.set_conversion_mode}
        1    0.000    0.000    0.000    0.000 chebyshev.py:2041(Chebyshev)
        1    0.000    0.000    0.000    0.000 threading.py:125(_RLock)
        4    0.000    0.000    0.000    0.000 {thread.allocate_lock}
        1    0.000    0.000    0.000    0.000 threading.py:542(Event)
        1    0.000    0.000    0.000    0.000 threading.py:576(set)
        2    0.000    0.000    0.000    0.000 threading.py:242(Condition)
        1    0.000    0.000    0.000    0.000 extras.py:1344(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:373(notify)
        1    0.000    0.000    0.000    0.000 _iotools.py:154(LineSplitter)
        1    0.000    0.000    0.000    0.000 suite.py:78(TestSuite)
        1    0.000    0.000    0.000    0.000 weakref.py:297(__init__)
        1    0.000    0.000    0.000    0.000 suite.py:16(BaseTestSuite)
        1    0.000    0.000    0.000    0.000 core.py:6104(MaskedConstant)
        6    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 ctypeslib.py:177(_ndptr)
        2    0.000    0.000    0.000    0.000 index_tricks.py:148(__init__)
        1    0.000    0.000    0.000    0.000 csv.py:26(Dialect)
        1    0.000    0.000    0.000    0.000 numbers.py:270(Rational)
        1    0.000    0.000    0.000    0.000 version.py:5(<module>)
       20    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        2    0.000    0.000    0.000    0.000 numeric.py:1871(set_string_function)
        1    0.000    0.000    0.000    0.000 pprint.py:84(PrettyPrinter)
        1    0.000    0.000    0.000    0.000 _datasource.py:504(Repository)
        1    0.000    0.000    0.000    0.000 getlimits.py:195(iinfo)
        7    0.000    0.000    0.000    0.000 case.py:607(_deprecate)
        1    0.000    0.000    0.000    0.000 threading.py:255(_Condition)
        1    0.000    0.000    0.000    0.000 threading.py:561(__init__)
        1    0.000    0.000    0.000    0.000 _import_tools.py:9(PackageLoader)
        1    0.000    0.000    0.000    0.000 records.py:298(recarray)
        1    0.000    0.000    0.000    0.000 _version.py:18(NumpyVersion)
        8    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        1    0.000    0.000    0.000    0.000 getlimits.py:25(finfo)
        1    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
        1    0.000    0.000    0.000    0.000 _datasource.py:74(__init__)
        1    0.000    0.000    0.000    0.000 UserDict.py:91(get)
        1    0.000    0.000    0.000    0.000 core.py:6111(__new__)
        1    0.000    0.000    0.000    0.000 copy_reg.py:14(pickle)
        7    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 io.py:79(TextIOBase)
        1    0.000    0.000    0.000    0.000 core.py:7764(_convert2ma)
        1    0.000    0.000    0.000    0.000 index_tricks.py:447(__init__)
        6    0.000    0.000    0.000    0.000 {numpy.core.umath.geterrobj}
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        3    0.000    0.000    0.000    0.000 UserDict.py:103(__contains__)
        4    0.000    0.000    0.000    0.000 threading.py:59(__init__)
        1    0.000    0.000    0.000    0.000 io.py:69(IOBase)
        1    0.000    0.000    0.000    0.000 threading.py:1119(_DummyThread)
        1    0.000    0.000    0.000    0.000 warnings.py:377(__exit__)
        1    0.000    0.000    0.000    0.000 records.py:83(format_parser)
        1    0.000    0.000    0.000    0.000 numeric.py:2967(__enter__)
        1    0.000    0.000    0.000    0.000 contextlib.py:9(GeneratorContextManager)
        1    0.000    0.000    0.000    0.000 numbers.py:13(Number)
        1    0.000    0.000    0.000    0.000 core.py:6289(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:329(CDLL)
        1    0.000    0.000    0.000    0.000 _endian.py:23(_swapped_meta)
        1    0.000    0.000    0.000    0.000 nosetester.py:128(NoseTester)
        1    0.000    0.000    0.000    0.000 {zip}
        1    0.000    0.000    0.000    0.000 index_tricks.py:470(__init__)
        1    0.000    0.000    0.000    0.000 difflib.py:44(SequenceMatcher)
        1    0.000    0.000    0.000    0.000 core.py:2352(_MaskedPrintOption)
        1    0.000    0.000    0.000    0.000 npyio.py:40(BagObj)
        1    0.000    0.000    0.000    0.000 runner.py:119(TextTestRunner)
        1    0.000    0.000    0.000    0.000 case.py:98(_AssertRaisesContext)
        1    0.000    0.000    0.000    0.000 threading.py:285(__enter__)
        1    0.000    0.000    0.000    0.000 numeric.py:2978(_setdef)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:13(Codec)
        3    0.000    0.000    0.000    0.000 __init__.py:491(CFunctionType)
        1    0.000    0.000    0.000    0.000 core.py:961(_MaskedBinaryOperation)
        1    0.000    0.000    0.000    0.000 threading.py:780(_set_ident)
        1    0.000    0.000    0.000    0.000 main.py:63(TestProgram)
        1    0.000    0.000    0.000    0.000 difflib.py:1670(HtmlDiff)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 {_ctypes.dlopen}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        1    0.000    0.000    0.000    0.000 utils.py:1002(SafeEval)
        1    0.000    0.000    0.000    0.000 threading.py:400(notifyAll)
        5    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.000    0.000    0.000    0.000 tempfile.py:383(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 memmap.py:20(memmap)
        1    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.000    0.000 machar.py:17(MachAr)
        3    0.000    0.000    0.000    0.000 __init__.py:101(CFunctionType)
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        1    0.000    0.000    0.000    0.000 suite.py:252(_ErrorHolder)
        1    0.000    0.000    0.000    0.000 threading.py:300(_is_owned)
        1    0.000    0.000    0.000    0.000 utils.py:1881(clear_and_catch_warnings)
        1    0.000    0.000    0.000    0.000 _globals.py:45(VisibleDeprecationWarning)
        1    0.000    0.000    0.000    0.000 threading.py:552(_Event)
        2    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 csv.py:166(Sniffer)
        1    0.000    0.000    0.000    0.000 threading.py:57(_Verbose)
        1    0.000    0.000    0.000    0.000 csv.py:127(DictWriter)
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 index_tricks.py:87(nd_grid)
        1    0.000    0.000    0.000    0.000 index_tricks.py:475(ndenumerate)
        1    0.000    0.000    0.000    0.000 __init__.py:156(py_object)
        3    0.000    0.000    0.000    0.000 utils.py:51(_set_function_name)
        1    0.000    0.000    0.000    0.000 _endian.py:46(BigEndianStructure)
        1    0.000    0.000    0.000    0.000 index_tricks.py:525(ndindex)
        1    0.000    0.000    0.000    0.000 core.py:885(_MaskedUnaryOperation)
        1    0.000    0.000    0.000    0.000 linalg.py:43(LinAlgError)
        1    0.000    0.000    0.000    0.000 extras.py:1414(__init__)
        1    0.000    0.000    0.000    0.000 extras.py:215(_fromnxfunction)
        7    0.000    0.000    0.000    0.000 _inspect.py:144(<lambda>)
        1    0.000    0.000    0.000    0.000 core.py:6275(__init__)
        1    0.000    0.000    0.000    0.000 core.py:6342(_frommethod)
        1    0.000    0.000    0.000    0.000 core.py:2569(MaskedIterator)
        1    0.000    0.000    0.000    0.000 _globals.py:33(ModuleDeprecationWarning)
        2    0.000    0.000    0.000    0.000 core.py:876(__init__)
        1    0.000    0.000    0.000    0.000 index_tricks.py:223(AxisConcatenator)
        1    0.000    0.000    0.000    0.000 core.py:6214(_extrema_operation)
        1    0.000    0.000    0.000    0.000 case.py:34(_ExpectedFailure)
        1    0.000    0.000    0.000    0.000 threading.py:288(__exit__)
        1    0.000    0.000    0.000    0.000 __init__.py:257(c_bool)
        1    0.000    0.000    0.000    0.000 utils.py:1841(IgnoreException)
        1    0.000    0.000    0.000    0.000 arrayprint.py:733(TimedeltaFormat)
        1    0.000    0.000    0.000    0.000 contextlib.py:132(closing)
        1    0.000    0.000    0.000    0.000 __init__.py:223(c_ubyte)
        1    0.000    0.000    0.000    0.000 threading.py:1079(_MainThread)
        1    0.000    0.000    0.000    0.000 io.py:76(BufferedIOBase)
        1    0.000    0.000    0.000    0.000 numerictypes.py:765(_typedict)
        1    0.000    0.000    0.000    0.000 numeric.py:2900(errstate)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 __init__.py:198(c_double)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 core.py:855(_DomainGreater)
        3    0.000    0.000    0.000    0.000 core.py:805(__init__)
        2    0.000    0.000    0.000    0.000 sre_parse.py:224(isdigit)
        1    0.000    0.000    0.000    0.000 case.py:45(_UnexpectedSuccess)
        1    0.000    0.000    0.000    0.000 polynomial.py:22(RankWarning)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 numeric.py:2972(__exit__)
        1    0.000    0.000    0.000    0.000 {method 'acquire' of 'thread.lock' objects}
        1    0.000    0.000    0.000    0.000 _iotools.py:452(ConverterLockError)
        1    0.000    0.000    0.000    0.000 threading.py:64(_note)
        1    0.000    0.000    0.000    0.000 core.py:90(MaskedArrayFutureWarning)
        1    0.000    0.000    0.000    0.000 utils.py:1612(WarningManager)
        1    0.000    0.000    0.000    0.000 runner.py:12(_WritelnDecorator)
        1    0.000    0.000    0.000    0.000 shutil.py:34(SpecialFileError)
        1    0.000    0.000    0.000    0.000 __init__.py:230(c_byte)
        1    0.000    0.000    0.000    0.000 core.py:138(MaskError)
        1    0.000    0.000    0.000    0.000 signals.py:9(_InterruptHandler)
        1    0.000    0.000    0.000    0.000 polyutils.py:66(PolyDomainError)
        1    0.000    0.000    0.000    0.000 __init__.py:169(c_ushort)
        1    0.000    0.000    0.000    0.000 threading.py:1049(_Timer)
        8    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 unicode_escape.py:20(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 arrayprint.py:634(IntegerFormat)
        1    0.000    0.000    0.000    0.000 utils.py:1580(WarningMessage)
        1    0.000    0.000    0.000    0.000 __init__.py:385(PyDLL)
        1    0.000    0.000    0.000    0.000 difflib.py:764(Differ)
        1    0.000    0.000    0.000    0.000 {method '__exit__' of 'thread.lock' objects}
        1    0.000    0.000    0.000    0.000 index_tricks.py:352(RClass)
        1    0.000    0.000    0.000    0.000 core.py:826(__init__)
        1    0.000    0.000    0.000    0.000 polyutils.py:79(PolyBase)
        1    0.000    0.000    0.000    0.000 __init__.py:425(LibraryLoader)
        1    0.000    0.000    0.000    0.000 __init__.py:194(c_float)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 extras.py:1332(MAxisConcatenator)
        1    0.000    0.000    0.000    0.000 case.py:25(SkipTest)
        1    0.000    0.000    0.000    0.000 threading.py:1088(_set_daemon)
        1    0.000    0.000    0.000    0.000 __init__.py:235(c_char)
        1    0.000    0.000    0.000    0.000 index_tricks.py:603(IndexExpression)
        1    0.000    0.000    0.000    0.000 csv.py:67(excel_tab)
        1    0.000    0.000    0.000    0.000 arrayprint.py:684(LongComplexFormat)
        1    0.000    0.000    0.000    0.000 copy_reg.py:27(constructor)
        1    0.000    0.000    0.000    0.000 threading.py:515(_BoundedSemaphore)
        1    0.000    0.000    0.000    0.000 arrayprint.py:712(DatetimeFormat)
        1    0.000    0.000    0.000    0.000 pickle.py:58(PickleError)
        1    0.000    0.000    0.000    0.000 __init__.py:173(c_long)
        1    0.000    0.000    0.000    0.000 threading.py:423(_Semaphore)
        1    0.000    0.000    0.000    0.000 __init__.py:356(_FuncPtr)
        1    0.000    0.000    0.000    0.000 utils.py:56(_Deprecate)
        1    0.000    0.000    0.000    0.000 __init__.py:240(c_char_p)
        1    0.000    0.000    0.000    0.000 core.py:1118(_DomainedBinaryOperation)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:15(DummyArray)
        1    0.000    0.000    0.000    0.000 extras.py:1398(mr_class)
        1    0.000    0.000    0.000    0.000 {time.time}
        5    0.000    0.000    0.000    0.000 _inspect.py:145(<lambda>)
        1    0.000    0.000    0.000    0.000 core.py:796(_DomainCheckInterval)
        1    0.000    0.000    0.000    0.000 numeric.py:55(ComplexWarning)
        1    0.000    0.000    0.000    0.000 _iotools.py:444(ConverterError)
        1    0.000    0.000    0.000    0.000 core.py:870(_DomainGreaterEqual)
        1    0.000    0.000    0.000    0.000 _internal.py:219(_missing_ctypes)
        6    0.000    0.000    0.000    0.000 core.py:841(__init__)
        1    0.000    0.000    0.000    0.000 _import_tools.py:340(PackageLoaderDebug)
        1    0.000    0.000    0.000    0.000 core.py:6271(_minimum_operation)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:24(IncrementalDecoder)
        1    0.000    0.000    0.000    0.000 core.py:818(_DomainTan)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of 'thread.lock' objects}
        1    0.000    0.000    0.000    0.000 core.py:2358(__init__)
        1    0.000    0.000    0.000    0.000 arrayprint.py:528(FloatFormat)
        1    0.000    0.000    0.000    0.000 core.py:6285(_maximum_operation)
        1    0.000    0.000    0.000    0.000 shutil.py:31(Error)
        1    0.000    0.000    0.000    0.000 _internal.py:631(TooHardError)
        1    0.000    0.000    0.000    0.000 suite.py:299(_DebugResult)
        1    0.000    0.000    0.000    0.000 arrayprint.py:654(LongFloatFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:165(c_short)
        1    0.000    0.000    0.000    0.000 pickle.py:82(_Stop)
        1    0.000    0.000    0.000    0.000 _globals.py:56(_NoValue)
        1    0.000    0.000    0.000    0.000 shutil.py:38(ExecError)
        1    0.000    0.000    0.000    0.000 __init__.py:177(c_ulong)
        1    0.000    0.000    0.000    0.000 core.py:130(MAError)
        1    0.000    0.000    0.000    0.000 __init__.py:288(c_wchar_p)
        1    0.000    0.000    0.000    0.000 core.py:6114(__array_finalize__)
        1    0.000    0.000    0.000    0.000 __init__.py:190(c_uint)
        3    0.000    0.000    0.000    0.000 core.py:861(__init__)
        1    0.000    0.000    0.000    0.000 pickle.py:69(UnpicklingError)
        1    0.000    0.000    0.000    0.000 polyutils.py:62(PolyError)
        1    0.000    0.000    0.000    0.000 arrayprint.py:695(ComplexFormat)
        1    0.000    0.000    0.000    0.000 __init__.py:252(c_void_p)
        2    0.000    0.000    0.000    0.000 __init__.py:426(__init__)
        1    0.000    0.000    0.000    0.000 pickle.py:62(PicklingError)
        1    0.000    0.000    0.000    0.000 __init__.py:291(c_wchar)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:28(StreamWriter)
        2    0.000    0.000    0.000    0.000 {thread.get_ident}
        1    0.000    0.000    0.000    0.000 utils.py:37(KnownFailureException)
        1    0.000    0.000    0.000    0.000 numeric.py:2896(_unspecified)
        1    0.000    0.000    0.000    0.000 __init__.py:202(c_longdouble)
        1    0.000    0.000    0.000    0.000 _iotools.py:460(ConversionWarning)
        2    0.000    0.000    0.000    0.000 index_tricks.py:647(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:186(c_int)
        1    0.000    0.000    0.000    0.000 index_tricks.py:452(CClass)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 io.py:73(RawIOBase)
        1    0.000    0.000    0.000    0.000 pickle.py:1267(_EmptyClass)
        1    0.000    0.000    0.000    0.000 unicode_escape.py:31(StreamReader)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


